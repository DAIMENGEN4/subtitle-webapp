[package]
name = "subtitle-webapp-rust-crate"
version = "0.0.0"
authors = ["mengen.dai <mengen.dai@advantest.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib"]

[features]
default = [
    "tokio/sync",
    "dasp/signal",
    "dasp/window",
    "dasp/interpolate",
    "dasp/interpolate-linear",
    "serde/derive",
    "web-sys/Url",
    "web-sys/Node",
    "web-sys/Worker",
    "web-sys/Window",
    "web-sys/console",
    "web-sys/Navigator",
    "web-sys/WorkerType",
    "web-sys/MessagePort",
    "web-sys/MediaStream",
    "web-sys/AudioWorklet",
    "web-sys/MediaDevices",
    "web-sys/AudioContext",
    "web-sys/WorkerOptions",
    "web-sys/AudioWorkletNode",
    "web-sys/AudioDestinationNode",
    "web-sys/MediaStreamConstraints",
    "web-sys/AudioWorkletNodeOptions",
    "web-sys/MediaStreamAudioSourceNode",
    "web-sys/MediaStreamAudioSourceOptions",
    "console_error_panic_hook"
]

[dependencies]
dasp = "0.11"
serde = "1.0"
tokio = "1.42"
js-sys = "0.3"
web-sys = "0.3"
wasm-bindgen = "0.2"
serde-wasm-bindgen = "0.6"
wasm-bindgen-futures = "0.4"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
# Also don't forget to compile in release mode for the smallest binaries! For larger applications you'll likely also want to turn on LTO to generate the smallest binaries
# https://rustwasm.github.io/docs/wasm-bindgen/examples/add.html
lto = true